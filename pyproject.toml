[project]
name = "design_workshop"
dynamic = ["version"]
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = ["httpx>=0.28"]
license = "MIT"
authors = [{ name = "Benjamin Askew-Gale" }]

[dependency-groups]
dev = [
    { include-group = "lint" },
    { include-group = "test" },
    { include-group = "typing" },
]
lint = ["ruff>=0.12.3"]
test = [
    "pytest>=8.3.3",
    "pytest-randomly>=3.15.0",
    "pytest-cov>=5.0.0",
    "logot>=1.3.0",
]
typing = ["mypy>=1.15.0"]
typing-test = [{ include-group = "test" }, { include-group = "typing" }]

[project.scripts]

[build-system]
requires = ["pdm-backend==2.4.5"]
build-backend = "pdm.backend"

[tool.pdm.version]
source = "scm"

[tool.uv]
resolution = "lowest-direct"

[tool.uv.sources]
pytest-grabbag = { git = "https://github.com/BenGale93/pytest_grabbag" }

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = ["ALL"]
ignore = ["COM812", "ISC001", "ANN401", "T201", "D"]

[tool.ruff.lint.per-file-ignores]
# Ignore all directories named `tests`.
"tests/**" = ["D", "S", "ANN"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
exclude = "build"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "design_workshop.*"
strict = true

[[tool.mypy.overrides]]
module = "tests.*"
strict = true
disallow_untyped_calls = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_subclassing_any = false

[tool.coverage.report]
exclude_also = [
    "if t.TYPE_CHECKING",
    "@t.overload",
    "@abstractmethod",
    "if TYPE_CHECKING",
]
show_missing = true

[tool.coverage.run]
branch = true

[tool.pytest.ini_options]
addopts = "--cov=src/ --cov-report="
filterwarnings = [
    "ignore::DeprecationWarning::",                   # ignore deprecations from all modules
    "default::DeprecationWarning:design_workshop.*:", # except from mymodule
]
